{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, renderSlot as _renderSlot } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_MtIcon = _resolveComponent(\"MtIcon\");\n  const _component_MtButton = _resolveComponent(\"MtButton\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_tabs_window_item = _resolveComponent(\"v-tabs-window-item\");\n  const _component_v_tabs_window = _resolveComponent(\"v-tabs-window\");\n  const _component_MtCard = _resolveComponent(\"MtCard\");\n  const _component_MtDialog = _resolveComponent(\"MtDialog\");\n  return _openBlock(), _createBlock(_component_MtDialog, {\n    ref: \"Dialog\",\n    title: \"Tips\",\n    onOnResize: $options.onResize\n  }, {\n    default: _withCtx(() => [_createVNode(_component_MtCard, {\n      height: _ctx.dialogInnerHeight,\n      width: _ctx.dialogInnerWidth,\n      style: {\n        \"overflow\": \"auto\",\n        \"margin\": \"0px 8px 0px 8px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_tabs, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectIndex = $event),\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tab, {\n            key: tip.title,\n            \"prepend-icon\": tip.icon\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(tip.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"prepend-icon\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_tabs_window, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectIndex = $event)\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tabs_window_item, {\n            key: tip.title\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, {\n                style: {\n                  \"white-space\": \"pre-wrap\"\n                }\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(tip.text), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(tip.linkInfo, labelLink => {\n                return _openBlock(), _createBlock(_component_v_card_actions, {\n                  key: labelLink.label\n                }, {\n                  default: _withCtx(() => [_createVNode(_component_MtButton, {\n                    height: \"30\",\n                    width: \"150\",\n                    color: \"primary\",\n                    outlined: \"\",\n                    text: labelLink.label,\n                    \"append-icon\": \"mdi-open-in-new\",\n                    onOnClick: $event => $options.onClick(labelLink.link)\n                  }, {\n                    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"append\", {}, () => [_createVNode(_component_MtIcon, {\n                      color: \"blue\",\n                      name: \"mdi-open-in-new\"\n                    }), _createTextVNode(\"> \")])]),\n                    _: 2 /* DYNAMIC */\n                  }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"text\", \"onOnClick\"])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */);\n              }), 128 /* KEYED_FRAGMENT */))]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 3 /* FORWARDED */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 3 /* FORWARDED */\n    }, 8 /* PROPS */, [\"height\", \"width\"])]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"onOnResize\"]);\n}","map":{"version":3,"names":["_createBlock","_component_MtDialog","ref","title","onOnResize","$options","onResize","default","_withCtx","_createVNode","_component_MtCard","height","_ctx","dialogInnerHeight","width","dialogInnerWidth","style","_component_v_tabs","modelValue","selectIndex","_cache","$event","color","_createElementBlock","_Fragment","_renderList","tips","tip","_component_v_tab","key","icon","_createTextVNode","_toDisplayString","_","_component_v_tabs_window","_component_v_tabs_window_item","_component_v_card","flat","_component_v_card_text","text","linkInfo","labelLink","_component_v_card_actions","label","_component_MtButton","outlined","onOnClick","onClick","link","_renderSlot","$slots","_component_MtIcon","name"],"sources":["C:\\work\\my-trip\\src\\dialog\\MtTipsDialog.vue"],"sourcesContent":["<!-- MtTipsDialog.vue -->\r\n<template>\r\n  <MtDialog ref=\"Dialog\" title=\"Tips\" @on-resize=\"onResize\">\r\n    <MtCard\r\n      :height=\"dialogInnerHeight\"\r\n      :width=\"dialogInnerWidth\"\r\n      style=\"overflow: auto; margin: 0px 8px 0px 8px\"\r\n    >\r\n      <v-tabs v-model=\"selectIndex\" color=\"primary\">\r\n        <v-tab v-for=\"tip in tips\" :key=\"tip.title\" :prepend-icon=\"tip.icon\">\r\n          {{ tip.title }}</v-tab\r\n        >\r\n      </v-tabs>\r\n\r\n      <v-tabs-window v-model=\"selectIndex\">\r\n        <v-tabs-window-item v-for=\"tip in tips\" :key=\"tip.title\">\r\n          <v-card flat>\r\n            <v-card-text style=\"white-space: pre-wrap\"\r\n              >{{ tip.text }}\r\n            </v-card-text>\r\n            <v-card-actions\r\n              v-for=\"labelLink in tip.linkInfo\"\r\n              :key=\"labelLink.label\"\r\n            >\r\n              <MtButton\r\n                height=\"30\"\r\n                width=\"150\"\r\n                color=\"primary\"\r\n                outlined\r\n                :text=\"labelLink.label\"\r\n                append-icon=\"mdi-open-in-new\"\r\n                @on-click=\"onClick(labelLink.link)\"\r\n              >\r\n                <slot name=\"append\">\r\n                  <MtIcon color=\"blue\" name=\"mdi-open-in-new\"></MtIcon>>\r\n                </slot>\r\n              </MtButton>\r\n            </v-card-actions>\r\n          </v-card>\r\n        </v-tabs-window-item>\r\n      </v-tabs-window>\r\n    </MtCard>\r\n  </MtDialog>\r\n</template>\r\n\r\n<script>\r\nimport MtDialog from \"./MtDialog.vue\";\r\nimport MtCard from \"@/components/MtCard.vue\";\r\nimport MtButton from \"@/components/MtButton.vue\";\r\nimport MtIcon from \"@/components/MtIcon.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    MtDialog,\r\n    MtCard,\r\n    MtButton,\r\n    MtIcon,\r\n  },\r\n  props: {\r\n    //\r\n  },\r\n  data: () => ({\r\n    tips: [],\r\n    dialogInnerHeight: 0,\r\n    dialogInnerWidth: 0,\r\n    selectIndex: null,\r\n  }),\r\n  computed: {\r\n    label: function (tip) {\r\n      return tip.linkInfo[\"label\"];\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    onResize: function (event) {\r\n      this.dialogInnerHeight = event.cardHeight;\r\n      this.dialogInnerWidth = event.cardwidth;\r\n    },\r\n    show: async function (tips) {\r\n      this.tips = tips;\r\n      await this.$refs.Dialog.show();\r\n    },\r\n    onClick: function (link) {\r\n      window.open(link);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}