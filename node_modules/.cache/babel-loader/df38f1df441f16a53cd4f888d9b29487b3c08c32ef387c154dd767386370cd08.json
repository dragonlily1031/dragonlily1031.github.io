{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-wrap\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MtToolbar = _resolveComponent(\"MtToolbar\");\n  const _component_v_img = _resolveComponent(\"v-img\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_MtCard = _resolveComponent(\"MtCard\");\n  const _directive_resize = _resolveDirective(\"resize\");\n  return _withDirectives((_openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_MtCard, {\n    color: \"#eeeeee\",\n    height: _ctx.height,\n    width: _ctx.width\n  }, {\n    default: _withCtx(() => [_createVNode(_component_MtToolbar), _createVNode(_component_MtCard, {\n      color: \"red\",\n      height: _ctx.cardHeight,\n      width: _ctx.cardWidth\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.scheduleInfo, (item, index) => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: index\n        }, [_createVNode(_component_MtCard, {\n          elevation: 2,\n          width: 150,\n          \"min-width\": 200,\n          style: {\n            \"margin\": \"8px\"\n          },\n          onClick: $event => $options.onClick(item.title)\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_img, {\n            src: item.url,\n            height: \"200\"\n          }, null, 8 /* PROPS */, [\"src\"]), _createVNode(_component_v_card_title, null, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(item.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"height\", \"width\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"height\", \"width\"])])), [[_directive_resize, $options.onResize]]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_MtCard","color","height","_ctx","width","default","_withCtx","_component_MtToolbar","cardHeight","cardWidth","_createElementVNode","_hoisted_1","_Fragment","_renderList","scheduleInfo","item","index","key","elevation","style","onClick","$event","$options","title","_component_v_img","src","url","_component_v_card_title","_createTextVNode","_toDisplayString","_","onResize"],"sources":["C:\\work\\my-trip\\src\\views\\HomePage.vue"],"sourcesContent":["<template>\r\n  <div v-resize=\"onResize\">\r\n    <MtCard color=\"#eeeeee\" :height=\"height\" :width=\"width\">\r\n      <MtToolbar />\r\n      <MtCard color=\"red\" :height=\"cardHeight\" :width=\"cardWidth\">\r\n        <div class=\"d-flex flex-wrap\">\r\n          <div v-for=\"(item, index) in scheduleInfo\" :key=\"index\">\r\n            <MtCard\r\n              :elevation=\"2\"\r\n              :width=\"150\"\r\n              :min-width=\"200\"\r\n              style=\"margin: 8px\"\r\n              @click=\"onClick(item.title)\"\r\n            >\r\n              <v-img :src=\"item.url\" height=\"200\"></v-img>\r\n              <v-card-title>{{ item.title }}</v-card-title>\r\n            </MtCard>\r\n          </div>\r\n        </div>\r\n      </MtCard>\r\n    </MtCard>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MtToolbar from \"@/components/MtToolbar.vue\";\r\nimport MtCard from \"@/components/MtCard.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    MtToolbar,\r\n    MtCard,\r\n  },\r\n  data: () => ({\r\n    scheduleInfo: [\r\n      {\r\n        title: \"Schedule\",\r\n        url: \"/assets/sea.png\",\r\n      },\r\n      {\r\n        title: \"Hotel\",\r\n        url: \"/assets/hotel.png\",\r\n      },\r\n      {\r\n        title: \"Emergency\",\r\n        url: \"/assets/usa.png\",\r\n      },\r\n    ],\r\n    height: 0,\r\n    width: 0,\r\n    cardHeight: 0,\r\n    cardWidth: 0,\r\n  }),\r\n  mounted: function () {\r\n    this.onResize();\r\n  },\r\n  computed: {\r\n    //\r\n  },\r\n  methods: {\r\n    onResize: function () {\r\n      this.height = window.innerHeight;\r\n      this.width = window.innerWidth;\r\n      const toolbarHeight = 48;\r\n      this.cardHeight = this.height - toolbarHeight;\r\n      this.cardWidth = this.width * 0.98;\r\n    },\r\n    onClick: function (title) {\r\n      if (title == \"Schedule\") this.$router.push(\"/schedule\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAKaA,KAAK,EAAC;AAAkB;;;;;;;wCAJnCC,mBAAA,CAoBM,cAnBJC,YAAA,CAkBSC,iBAAA;IAlBDC,KAAK,EAAC,SAAS;IAAEC,MAAM,EAAEC,IAAA,CAAAD,MAAM;IAAGE,KAAK,EAAED,IAAA,CAAAC;;IAFrDC,OAAA,EAAAC,QAAA,CAGM,MAAa,CAAbP,YAAA,CAAaQ,oBAAA,GACbR,YAAA,CAeSC,iBAAA;MAfDC,KAAK,EAAC,KAAK;MAAEC,MAAM,EAAEC,IAAA,CAAAK,UAAU;MAAGJ,KAAK,EAAED,IAAA,CAAAM;;MAJvDJ,OAAA,EAAAC,QAAA,CAKQ,MAaM,CAbNI,mBAAA,CAaM,OAbNC,UAaM,I,kBAZJb,mBAAA,CAWMc,SAAA,QAjBhBC,WAAA,CAMuCV,IAAA,CAAAW,YAAY,EANnD,CAMuBC,IAAI,EAAEC,KAAK;6BAAxBlB,mBAAA,CAWM;UAXsCmB,GAAG,EAAED;QAAK,IACpDjB,YAAA,CASSC,iBAAA;UARNkB,SAAS,EAAE,CAAC;UACZd,KAAK,EAAE,GAAG;UACV,WAAS,EAAE,GAAG;UACfe,KAAmB,EAAnB;YAAA;UAAA,CAAmB;UAClBC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAF,OAAO,CAACL,IAAI,CAACQ,KAAK;;UAZxClB,OAAA,EAAAC,QAAA,CAcc,MAA4C,CAA5CP,YAAA,CAA4CyB,gBAAA;YAApCC,GAAG,EAAEV,IAAI,CAACW,GAAG;YAAExB,MAAM,EAAC;4CAC9BH,YAAA,CAA6C4B,uBAAA;YAf3DtB,OAAA,EAAAC,QAAA,CAe4B,MAAgB,CAf5CsB,gBAAA,CAAAC,gBAAA,CAe+Bd,IAAI,CAACQ,KAAK,iB;YAfzCO,CAAA;;UAAAA,CAAA;;;MAAAA,CAAA;;IAAAA,CAAA;kEACiBR,QAAA,CAAAS,QAAQ,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}