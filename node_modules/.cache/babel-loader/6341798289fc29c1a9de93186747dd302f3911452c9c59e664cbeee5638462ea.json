{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex flex-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_tabs_window_item = _resolveComponent(\"v-tabs-window-item\");\n  const _component_v_tabs_window = _resolveComponent(\"v-tabs-window\");\n  const _component_MtCard = _resolveComponent(\"MtCard\");\n  const _component_MtDialog = _resolveComponent(\"MtDialog\");\n  return _openBlock(), _createBlock(_component_MtDialog, {\n    ref: \"Dialog\",\n    title: \"Tips\",\n    onOnResize: $options.onResize\n  }, {\n    default: _withCtx(() => [_createVNode(_component_MtCard, {\n      color: \"red\",\n      height: _ctx.dialogInnerHeight,\n      width: _ctx.dialogInnerWidth\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_tabs, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectIndex = $event),\n        color: \"primary\",\n        direction: \"vertical\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tab, {\n            key: tip.title,\n            \"prepend-icon\": \"mdi-account\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(tip.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_tabs_window, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectIndex = $event)\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tabs_window_item, {\n            key: tip.title\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, {\n                text: tip.text\n              }, null, 8 /* PROPS */, [\"text\"])]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"height\", \"width\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onOnResize\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_MtDialog","ref","title","onOnResize","$options","onResize","default","_withCtx","_createVNode","_component_MtCard","color","height","_ctx","dialogInnerHeight","width","dialogInnerWidth","_createElementVNode","_hoisted_1","_component_v_tabs","modelValue","selectIndex","_cache","$event","direction","_createElementBlock","_Fragment","_renderList","tips","tip","_component_v_tab","key","_createTextVNode","_toDisplayString","_","_component_v_tabs_window","_component_v_tabs_window_item","_component_v_card","flat","_component_v_card_text","text"],"sources":["C:\\work\\my-trip\\src\\dialog\\MtTipsDialog.vue"],"sourcesContent":["<!-- MtTipsDialog.vue -->\r\n<template>\r\n  <MtDialog ref=\"Dialog\" title=\"Tips\" @on-resize=\"onResize\">\r\n    <MtCard color=\"red\" :height=\"dialogInnerHeight\" :width=\"dialogInnerWidth\">\r\n      <div class=\"d-flex flex-row\">\r\n        <v-tabs v-model=\"selectIndex\" color=\"primary\" direction=\"vertical\">\r\n          <v-tab\r\n            v-for=\"tip in tips\"\r\n            :key=\"tip.title\"\r\n            prepend-icon=\"mdi-account\"\r\n          >\r\n            {{ tip.title }}</v-tab\r\n          >\r\n        </v-tabs>\r\n\r\n        <v-tabs-window v-model=\"selectIndex\">\r\n          <v-tabs-window-item v-for=\"tip in tips\" :key=\"tip.title\">\r\n            <v-card flat>\r\n              <v-card-text :text=\"tip.text\"> </v-card-text>\r\n            </v-card>\r\n          </v-tabs-window-item>\r\n        </v-tabs-window>\r\n      </div>\r\n    </MtCard>\r\n  </MtDialog>\r\n</template>\r\n\r\n<script>\r\nimport MtDialog from \"./MtDialog.vue\";\r\nimport MtCard from \"@/components/MtCard.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    MtDialog,\r\n    MtCard,\r\n  },\r\n  props: {\r\n    height: { type: [Number, String], required: false, default: 600 },\r\n    width: { type: [Number, String], required: false, default: 500 },\r\n  },\r\n  data: () => ({\r\n    tips: [],\r\n    dialogInnerHeight: 0,\r\n    dialogInnerWidth: 0,\r\n    selectIndex: null,\r\n  }),\r\n  methods: {\r\n    onResize: function (event) {\r\n      this.dialogInnerHeight = event.cardHeight;\r\n      this.dialogInnerWidth = event.cardwidth;\r\n    },\r\n    show: async function (tips) {\r\n      this.tips = tips;\r\n      await this.$refs.Dialog.show();\r\n    },\r\n    onClose: function () {\r\n      this.dialog = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EAIWA,KAAK,EAAC;AAAiB;;;;;;;;;;uBAFhCC,YAAA,CAsBWC,mBAAA;IAtBDC,GAAG,EAAC,QAAQ;IAACC,KAAK,EAAC,MAAM;IAAEC,UAAS,EAAEC,QAAA,CAAAC;;IAFlDC,OAAA,EAAAC,QAAA,CAGI,MAoBS,CApBTC,YAAA,CAoBSC,iBAAA;MApBDC,KAAK,EAAC,KAAK;MAAEC,MAAM,EAAEC,IAAA,CAAAC,iBAAiB;MAAGC,KAAK,EAAEF,IAAA,CAAAG;;MAH5DT,OAAA,EAAAC,QAAA,CAIM,MAkBM,CAlBNS,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJT,YAAA,CAQSU,iBAAA;QAbjBC,UAAA,EAKyBP,IAAA,CAAAQ,WAAW;QALpC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKyBV,IAAA,CAAAQ,WAAW,GAAAE,MAAA;QAAEZ,KAAK,EAAC,SAAS;QAACa,SAAS,EAAC;;QALhEjB,OAAA,EAAAC,QAAA,CAOY,MAAmB,E,kBADrBiB,mBAAA,CAKqCC,SAAA,QAX/CC,WAAA,CAO0Bd,IAAA,CAAAe,IAAI,EAAXC,GAAG;+BADZ7B,YAAA,CAKqC8B,gBAAA;YAHlCC,GAAG,EAAEF,GAAG,CAAC1B,KAAK;YACf,cAAY,EAAC;;YATzBI,OAAA,EAAAC,QAAA,CAWY,MAAe,CAX3BwB,gBAAA,CAAAC,gBAAA,CAWeJ,GAAG,CAAC1B,KAAK,iB;YAXxB+B,CAAA;;;QAAAA,CAAA;yCAeQzB,YAAA,CAMgB0B,wBAAA;QArBxBf,UAAA,EAegCP,IAAA,CAAAQ,WAAW;QAf3C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAegCV,IAAA,CAAAQ,WAAW,GAAAE,MAAA;;QAf3ChB,OAAA,EAAAC,QAAA,CAgB8B,MAAmB,E,kBAAvCiB,mBAAA,CAIqBC,SAAA,QApB/BC,WAAA,CAgB4Cd,IAAA,CAAAe,IAAI,EAAXC,GAAG;+BAA9B7B,YAAA,CAIqBoC,6BAAA;YAJoBL,GAAG,EAAEF,GAAG,CAAC1B;;YAhB5DI,OAAA,EAAAC,QAAA,CAiBY,MAES,CAFTC,YAAA,CAES4B,iBAAA;cAFDC,IAAI,EAAJ;YAAI;cAjBxB/B,OAAA,EAAAC,QAAA,CAkBc,MAA6C,CAA7CC,YAAA,CAA6C8B,sBAAA;gBAA/BC,IAAI,EAAEX,GAAG,CAACW;;cAlBtCN,CAAA;;YAAAA,CAAA;;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}