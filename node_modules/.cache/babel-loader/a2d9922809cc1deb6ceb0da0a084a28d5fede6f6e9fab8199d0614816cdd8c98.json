{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_tab = _resolveComponent(\"v-tab\");\n  const _component_v_tabs = _resolveComponent(\"v-tabs\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_tabs_window_item = _resolveComponent(\"v-tabs-window-item\");\n  const _component_v_tabs_window = _resolveComponent(\"v-tabs-window\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_MtButton = _resolveComponent(\"MtButton\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_MtCard = _resolveComponent(\"MtCard\");\n  const _component_MtDialog = _resolveComponent(\"MtDialog\");\n  return _openBlock(), _createBlock(_component_MtDialog, {\n    ref: \"Dialog\",\n    title: \"Tips\",\n    onOnResize: $options.onResize\n  }, {\n    default: _withCtx(() => [_createVNode(_component_MtCard, {\n      height: _ctx.dialogInnerHeight,\n      width: _ctx.dialogInnerWidth,\n      style: {\n        \"overflow\": \"auto\",\n        \"margin\": \"0px 8px 0px 8px\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_tabs, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.selectIndex = $event),\n        color: \"primary\"\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tab, {\n            key: tip.title,\n            \"prepend-icon\": tip.icon\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(tip.title), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"prepend-icon\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_tabs_window, {\n        modelValue: _ctx.selectIndex,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectIndex = $event)\n      }, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tips, tip => {\n          return _openBlock(), _createBlock(_component_v_tabs_window_item, {\n            key: tip.title\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              flat: \"\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_v_card_text, {\n                style: {\n                  \"white-space\": \"pre-wrap\"\n                }\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(tip.text), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tip.linkInfo, (labelAndLinks, index) => {\n          return _openBlock(), _createBlock(_component_MtButton, {\n            key: index,\n            height: \"30\",\n            width: \"30\",\n            onClick: $event => $options.onClick(labelAndLinks)\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.label), 1 /* TEXT */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"height\", \"width\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onOnResize\"]);\n}","map":{"version":3,"names":["_createBlock","_component_MtDialog","ref","title","onOnResize","$options","onResize","default","_withCtx","_createVNode","_component_MtCard","height","_ctx","dialogInnerHeight","width","dialogInnerWidth","style","_component_v_tabs","modelValue","selectIndex","_cache","$event","color","_createElementBlock","_Fragment","_renderList","tips","tip","_component_v_tab","key","icon","_createTextVNode","_toDisplayString","_","_component_v_tabs_window","_component_v_tabs_window_item","_component_v_card","flat","_component_v_card_text","text","_component_v_card_actions","_component_v_spacer","linkInfo","labelAndLinks","index","_component_MtButton","onClick","label"],"sources":["C:\\work\\my-trip\\src\\dialog\\MtTipsDialog.vue"],"sourcesContent":["<!-- MtTipsDialog.vue -->\r\n<template>\r\n  <MtDialog ref=\"Dialog\" title=\"Tips\" @on-resize=\"onResize\">\r\n    <MtCard\r\n      :height=\"dialogInnerHeight\"\r\n      :width=\"dialogInnerWidth\"\r\n      style=\"overflow: auto; margin: 0px 8px 0px 8px\"\r\n    >\r\n      <v-tabs v-model=\"selectIndex\" color=\"primary\">\r\n        <v-tab v-for=\"tip in tips\" :key=\"tip.title\" :prepend-icon=\"tip.icon\">\r\n          {{ tip.title }}</v-tab\r\n        >\r\n      </v-tabs>\r\n\r\n      <v-tabs-window v-model=\"selectIndex\">\r\n        <v-tabs-window-item v-for=\"tip in tips\" :key=\"tip.title\">\r\n          <v-card flat>\r\n            <v-card-text style=\"white-space: pre-wrap\"\r\n              >{{ tip.text }}\r\n            </v-card-text>\r\n          </v-card>\r\n        </v-tabs-window-item>\r\n      </v-tabs-window>\r\n\r\n      <v-card-actions>\r\n        <v-spacer></v-spacer>\r\n        <MtButton\r\n          v-for=\"(labelAndLinks, index) in tip.linkInfo\"\r\n          :key=\"index\"\r\n          height=\"30\"\r\n          width=\"30\"\r\n          @click=\"onClick(labelAndLinks)\"\r\n        >\r\n          {{ label }}\r\n        </MtButton>\r\n      </v-card-actions>\r\n    </MtCard>\r\n  </MtDialog>\r\n</template>\r\n\r\n<script>\r\nimport MtDialog from \"./MtDialog.vue\";\r\nimport MtCard from \"@/components/MtCard.vue\";\r\nimport MtButton from \"@/components/MtButton.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    MtDialog,\r\n    MtCard,\r\n    MtButton,\r\n  },\r\n  props: {\r\n    //\r\n  },\r\n  data: () => ({\r\n    tips: [],\r\n    dialogInnerHeight: 0,\r\n    dialogInnerWidth: 0,\r\n    selectIndex: null,\r\n    hasLink: false,\r\n  }),\r\n  methods: {\r\n    onResize: function (event) {\r\n      this.dialogInnerHeight = event.cardHeight;\r\n      this.dialogInnerWidth = event.cardwidth;\r\n    },\r\n    show: async function (tips) {\r\n      this.tips = tips;\r\n      await this.$refs.Dialog.show();\r\n    },\r\n    hasLinkInfo: function (linkInfo) {\r\n      if (linkInfo.length >= 1) this.hasLink = true;\r\n    },\r\n    onClick: function (linkInfo) {\r\n      if (linkInfo[\"link\"]) window.open(linkInfo[\"link\"]);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;;;;uBAEEA,YAAA,CAmCWC,mBAAA;IAnCDC,GAAG,EAAC,QAAQ;IAACC,KAAK,EAAC,MAAM;IAAEC,UAAS,EAAEC,QAAA,CAAAC;;IAFlDC,OAAA,EAAAC,QAAA,CAGI,MAiCS,CAjCTC,YAAA,CAiCSC,iBAAA;MAhCNC,MAAM,EAAEC,IAAA,CAAAC,iBAAiB;MACzBC,KAAK,EAAEF,IAAA,CAAAG,gBAAgB;MACxBC,KAA+C,EAA/C;QAAA;QAAA;MAAA;;MANNT,OAAA,EAAAC,QAAA,CAQM,MAIS,CAJTC,YAAA,CAISQ,iBAAA;QAZfC,UAAA,EAQuBN,IAAA,CAAAO,WAAW;QARlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQuBT,IAAA,CAAAO,WAAW,GAAAE,MAAA;QAAEC,KAAK,EAAC;;QAR1Cf,OAAA,EAAAC,QAAA,CASe,MAAmB,E,kBAA1Be,mBAAA,CACmCC,SAAA,QAV3CC,WAAA,CAS6Bb,IAAA,CAAAc,IAAI,EAAXC,GAAG;+BAAjB3B,YAAA,CACmC4B,gBAAA;YADPC,GAAG,EAAEF,GAAG,CAACxB,KAAK;YAAG,cAAY,EAAEwB,GAAG,CAACG;;YATvEvB,OAAA,EAAAC,QAAA,CAUU,MAAe,CAVzBuB,gBAAA,CAAAC,gBAAA,CAUaL,GAAG,CAACxB,KAAK,iB;YAVtB8B,CAAA;;;QAAAA,CAAA;yCAcMxB,YAAA,CAQgByB,wBAAA;QAtBtBhB,UAAA,EAc8BN,IAAA,CAAAO,WAAW;QAdzC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc8BT,IAAA,CAAAO,WAAW,GAAAE,MAAA;;QAdzCd,OAAA,EAAAC,QAAA,CAe4B,MAAmB,E,kBAAvCe,mBAAA,CAMqBC,SAAA,QArB7BC,WAAA,CAe0Cb,IAAA,CAAAc,IAAI,EAAXC,GAAG;+BAA9B3B,YAAA,CAMqBmC,6BAAA;YANoBN,GAAG,EAAEF,GAAG,CAACxB;;YAf1DI,OAAA,EAAAC,QAAA,CAgBU,MAIS,CAJTC,YAAA,CAIS2B,iBAAA;cAJDC,IAAI,EAAJ;YAAI;cAhBtB9B,OAAA,EAAAC,QAAA,CAiBY,MAEc,CAFdC,YAAA,CAEc6B,sBAAA;gBAFDtB,KAA6B,EAA7B;kBAAA;gBAAA;cAA6B;gBAjBtDT,OAAA,EAAAC,QAAA,CAkBe,MAAc,CAlB7BuB,gBAAA,CAAAC,gBAAA,CAkBkBL,GAAG,CAACY,IAAI,iB;gBAlB1BN,CAAA;;cAAAA,CAAA;;YAAAA,CAAA;;;QAAAA,CAAA;yCAwBMxB,YAAA,CAWiB+B,yBAAA;QAnCvBjC,OAAA,EAAAC,QAAA,CAyBQ,MAAqB,CAArBC,YAAA,CAAqBgC,mBAAA,I,kBACrBlB,mBAAA,CAQWC,SAAA,QAlCnBC,WAAA,CA2B2Cb,IAAA,CAAAe,GAAG,CAACe,QAAQ,EA3BvD,CA2BkBC,aAAa,EAAEC,KAAK;+BAD9B5C,YAAA,CAQW6C,mBAAA;YANRhB,GAAG,EAAEe,KAAK;YACXjC,MAAM,EAAC,IAAI;YACXG,KAAK,EAAC,IAAI;YACTgC,OAAK,EAAAzB,MAAA,IAAEhB,QAAA,CAAAyC,OAAO,CAACH,aAAa;;YA/BvCpC,OAAA,EAAAC,QAAA,CAiCU,MAAW,CAjCrBuB,gBAAA,CAAAC,gBAAA,CAiCapB,IAAA,CAAAmC,KAAK,iB;YAjClBd,CAAA;;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}